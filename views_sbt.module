<?php
// $id$

/**
 * Implementation of hook_form_FORMID_alter() for views_ui_config_type_form.
 */
function views_sbt_form_views_ui_config_type_form_alter(&$form, &$form_state, $form_id) {
  $action = explode('/', $form['#action']);
  if (count($action) == 9 && end($action) == 'sort') {

    $form['views_sbt_current_view'] = array(
      '#type' => 'hidden',
      '#value' => $form_state['view']->name,
    ); 
    $form['views_sbt_current_display'] = array(
      '#type' => 'hidden',
      '#value' => $form_state['view']->current_display,
    ); 

    $form['views_sbt_enable'] = array(
      '#type' => 'checkbox',
      '#title' => t('Enable sorting by tabs'), 
      '#weight' => 0,
      '#default_value' => variable_get(
        'views_sbt_view_'. $form_state['view']->name .'_display_'. $form_state['view']->current_display, FALSE
      ),
    ); 
    $form['buttons']['submit']['#submit'][] = 'views_sbt_form_views_ui_config_type_submit';

  } 
}

/**
 * Submit function for views_ui_config_type_form.
 */
function views_sbt_form_views_ui_config_type_submit($form, &$form_state) {
  // save
  $enable = $form_state['input']['views_sbt_enable'] ? TRUE : FALSE;
  variable_set('views_sbt_view_'. $form_state['input']['views_sbt_current_view'] .'_display_'. $form_state['input']['views_sbt_current_display'], $enable);
}

/**
 * Implementation of hook_form_FORMID_alter() for views_exposed_form.
 */
function views_sbt_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['sort_by']) && isset($form['sort_order'])
    && variable_get('views_sbt_view_'. $form_state['view']->name .'_display_'. $form_state['view']->current_display, FALSE)
  ) {

    // default sort is fist key of sort by selectbox
    $by = key($form['sort_by']['#options']);

    // generate and show tabs
    $tabs = array();
    foreach ($form['sort_by']['#options'] as $key => $label) {
      // current "sort by" is active
      if (isset($form_state['input']['form_id']) && $form_state['input']['form_id'] == $form_id) {
        if ($form_state['input']['sort_by'] == $key) {
          $active = TRUE;
          $order = $form_state['input']['sort_order'] == 'DESC' ? 'ASC' : 'DESC';
        }
        else {
          $active = FALSE;
          $order = $form_state['view']->sort[$key]->options['expose']['order'];
        }
      }
      else {
        if ($by == $key) {
          $active = TRUE;
          $order = $form_state['view']->sort[$key]->options['expose']['order'] == 'DESC' ? 'ASC' : 'DESC';
        }
        else {
          $active = FALSE;
          $order = $form_state['view']->sort[$key]->options['expose']['order'];
        }
      }

      // href value of link
      $properties = array(
        'sort_by='. $key,
        'sort_order='. $order,
        'form_build_id='. $form['form_build_id']['#value'],
        'form_id='. $form['form_id']['#value'],
      );
      if (isset($form['token'])) {
        $properties[] = 'form_token='. $form['form_token']['#default_value'];
      }
      $href = implode('&', $properties);
      
      // class property
      $class = implode(' ', array(
        'views-sbt-tab-link',
        $active ? 'views-sbt-active' : '',
      ));
      
      // write sort order as id
      $id = 'views-sbt-sort-order-'. $order;

      $tabs[] = '<a href="?'. $href .'" class="'. $class .'" id="'. $id .'">'. $label .'</a>';
    }
    $form['sort_tabs'] = array('#markup' => theme('item_list', array('items' => $tabs)));

    // add ajax support
    drupal_add_js(array('views_sbt' => array($form['#id'])), 'setting');
    drupal_add_js(drupal_get_path('module', 'views_sbt') .'/js/views_sbt.js');

    // hide selectboxes and submit
    $form['sort_by']['#prefix'] = $form['sort_order']['#prefix'] = $form['submit']['#prefix'] = '<div class="element-invisible">';
    $form['sort_by']['#suffix'] = $form['sort_order']['#suffix'] = $form['submit']['#suffix'] = '</div>';

  }
}
